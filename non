1. 1)x = c(17,16,20,24,22,15,21,18)
x[x>=20]
1. 2)x[x>=20]=100 -> y
y
2. 1)data.1 <- 3:7
diag(data.1)
x = diag(data.1)
x[!x>0] <- -1
x
2. 2)y <- x[,-5]
y
2. 3)yinfo <- c(dim(y))
yinfo
2. 4)y[y==-1] <- 0
y1 <- y
3. 1)v1 <- c(4,5,6,1)
v2 <- c(NA,2,3,4)
v3 <- c(3,2,NA,1)
v4 <- c(2,3,NA,2)
rdata <- data.frame(v1,v2,v3,v4,stringsAsFactors = F)
rdata
3. 2)is.na(rdata)
3. 3)rdata <- rdata[complete.cases(rdata[,c("v2")]),]
rdata <- rdata[complete.cases(rdata[,c("v3")]),]
rdata
3. 4)rdata1 <- rdata
rdata1
4. 1)temp <- list(TRUE, diag(2), seq(0,1,length=100),1,2,3,4)
temp
4. 2)temp[2] <- NULL
temp
4. 3)1
4. 4)length(temp)

5. 1) 0 2 2 4
a1's length is 4 and a2's length is 2. 
In vector addition, the vector with shorter length is reused.
so a1+a2 = (-1+1,0+2,1+1,2+2) = (0,2,2,4)

5.2) 0 0
a1 = -1 -2    a2 = 1,2
a1+a2 = 0 0

5. 3) 3 4
      3 4
a1 = 0 0   a2 = 3 4
     0 0
a1 + a2 = 3 4
          3 4
5. 4) 
a1 = 2 2
     2 2
a1[a1>2] = 0 
This is correct sentence, because there isn't any element bigger than 2 in matrix a1.

5. 5) 1 1 1 1
a1 = 1 2 3 4 5
a1[-1] means a1 except first element 
so a1[-1] = 2 3 4 5
a1[-length(a1)] = a1[-5] = 1 2 3 4
2 3 4 5 - 1 2 3 4 = 1 1 1 1

result <- function(x) {
  if(x==1) return(1)
  if(x==2) return(3)
  else return((0.9)*result(x-1)-(0.1)*result(x-2)+1)
}

result(20)

x <- list()
x[1] <- 1
x[2] <- 3

for(i in 3:20) {
  x[i] <- (0.9) * x[[i-1]] - (0.1) * x[[i-2]] + 1
  if(x[i] > 4) {
    print(i)
    break;
  }
}

A <- matrix( runif(100), 50 , 5)
v = c()
for(i in 1:50)
{
  sum = 0
  for(j in 1:5)
  {
    sum = sum + A[i,j]
  }
  v = c(v,sum)
}
v

tmp = rep(0, 10)
a <- 10:1
idx = 1
for ( j in a)
{
  if (j<5)
  {
    tmp[idx] <- a[j]
    idx <- idx + 1
  }
}
tmp

  x <- matrix(nrow=1000, ncol=5)
  sid <- matrix(nrow=1000, ncol=1)
  for(i in 1:1000){
  x[i,] <- sample(1:10,5)
  sid[i,] <- sample(1:10,1)
  }
  
xsid <- cbind(x,sid)
xsid





m.mat <- matrix(nrow=10, ncol=5)
  for(i in 1:5)
  {
    for(j in 1:10){
      for(k in 1:1000){
      if(sid[i]<-j){
        m.mat[j,] <- mean(sum(x[k,i]))
      }
      }
  }
m.mat[6,]





set.seed(1)
a = list()
freq.table <- rep(0,10)
v <- rep(0,10)
for (i in 1:1000)
{ x = rpois(1,4)+2
  x = min(x,10) 
  a[[i]] = sample(1:10, x)
}
a[1]

for(i in 1:1000) {
  k <- length(a[[i]])
  freq.table[[k]] <- freq.table[[k]] + 1
  for(j in 1:k) {
    if(k <= 4) {
      v[a[[i]][1]] <- v[a[[i]][1]] + 1
      break;
    }
    if(k <= 6) {
      v[a[[i]][1]] <- v[a[[i]][1]] + 2
      v[a[[i]][2]] <- v[a[[i]][2]] + 1
      break;
    }
    if(k <= 10) {
      v[a[[i]][1]] <- v[a[[i]][1]] + 3
      v[a[[i]][2]] <- v[a[[i]][2]] + 2
      v[a[[i]][3]] <- v[a[[i]][3]] + 1
    }
  }
}

print(freq.table)

print(v)

set.seed(1)
m1 = 10
m2 = 5
num = 0
for(i in 1:4)
{
  x<-rbinom(1,1,1/2)
  if(x==0)
  {
    m1=m1-1
    m2=m2-1
  }
  else
  {
    m1=m1+1
    m2=m2-1
  }
}
after 4 experiments
m1=10, m2=5
set.seed(1)
m1 = 10
m2 = 5
num = 0
a=0

while(!((m1 == 0) || (m2 == 0))) {
  x <- rbinom(1, 1, 1/2) 
  if(x == 0) {
    m1 <- m1 - 1
    m2 <- m2 + 1
  } else {
    m1 <- m1 + 1
    m2 <- m2 - 1
  } 
  
  a <- a + 1
}
a=191
191

(3)
AW <- 0
BW <- 0

for(k in 1:200) {
  set.seed(k)
  m1 <- 10
  m2 <- 5
  num <- 0
  
  while(TRUE) {
    x <- rbinom(1, 1, 1/2) 
    if(x == 0) {
      m1 <- m1 - 1
      m2 <- m2 + 1
    } else {
      m1 <- m1 + 1
      m2 <- m2 - 1
    } 
    
    if(m2 == 0) {
      AW <- AW + 1
      break;
    } else if(m1 == 0) {
      BW <- BW + 1
      break;
    }
  }
}

10)

AW <- 0
BW <- 0

for(k in 1:200) {
  set.seed(k)
  m1 <- 10
  m2 <- 10, 15, 20, 25
  num <- 0
  
  while(TRUE) {
    x <- rbinom(1, 1, 1/2) 
    if(x == 0) {
      m1 <- m1 - 1
      m2 <- m2 + 1
    } else {
      m1 <- m1 + 1
      m2 <- m2 - 1
    } 
    
    if(m2 == 0) {
      AW <- AW + 1
      break;
    } else if(m1 == 0) {
      BW <- BW + 1
      break;
    }
  }
}
